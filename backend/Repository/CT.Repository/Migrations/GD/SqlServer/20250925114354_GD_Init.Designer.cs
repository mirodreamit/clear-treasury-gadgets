// <auto-generated />
using System;
using CT.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CT.Repository.Migrations.GD.SqlServer
{
    [DbContext(typeof(GadgetsDbContext))]
    [Migration("20250925114354_GD_Init")]
    partial class GD_Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("GD")
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CT.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("Name"), new[] { "CreatedAt", "UpdatedAt" });

                    b.HasIndex("UpdatedAt");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("UpdatedAt"), new[] { "Name", "CreatedAt" });

                    b.ToTable("Category", "GD");
                });

            modelBuilder.Entity("CT.Domain.Entities.Gadget", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("Name"), new[] { "CreatedAt", "UpdatedAt" });

                    b.HasIndex("UpdatedAt");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("UpdatedAt"), new[] { "Name", "CreatedAt" });

                    b.ToTable("Gadget", "GD");
                });

            modelBuilder.Entity("CT.Domain.Entities.GadgetCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("GadgetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Ordinal")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("GadgetId", "CategoryId")
                        .IsUnique();

                    b.HasIndex("GadgetId", "Ordinal");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("GadgetId", "Ordinal"), new[] { "CreatedAt", "UpdatedAt", "CategoryId" });

                    b.ToTable("GadgetCategory", "GD");
                });

            modelBuilder.Entity("CT.Domain.Entities.GadgetCategory", b =>
                {
                    b.HasOne("CT.Domain.Entities.Category", "Category")
                        .WithMany("GadgetCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CT.Domain.Entities.Gadget", "Gadget")
                        .WithMany("GadgetCategories")
                        .HasForeignKey("GadgetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Gadget");
                });

            modelBuilder.Entity("CT.Domain.Entities.Category", b =>
                {
                    b.Navigation("GadgetCategories");
                });

            modelBuilder.Entity("CT.Domain.Entities.Gadget", b =>
                {
                    b.Navigation("GadgetCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
